/* 模态框组件样式 */

/* 基础模态框 */
.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(8px);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.modal.active {
  opacity: 1;
  pointer-events: auto;
}

.modal__content {
  width: 90%;
  max-width: 600px;
  max-height: 90vh;
  overflow-y: auto;
  padding: var(--space-xl);
  border-radius: var(--border-radius-lg);
  background: var(--bg-secondary);
  border: 1px solid var(--glass-border);
  transform: scale(0.95) translateY(20px);
  transition: transform 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.modal.active .modal__content {
  transform: scale(1) translateY(0);
}

.modal__actions {
  display: flex;
  justify-content: flex-end;
  gap: var(--space-md);
  margin-top: var(--space-xl);
}

/* 确认对话框特殊样式 */
.modal--confirm .modal__content {
  transform: scale(0.9);
  opacity: 0;
  transition: all 0.3s ease;
}

.modal--confirm.active .modal__content {
  transform: scale(1);
  opacity: 1;
}

/* 图片模态框 - 沉浸式体验 */
.image-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.85);
  backdrop-filter: blur(16px);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1001;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.4s ease;
}

.image-modal.active {
  opacity: 1;
  pointer-events: all;
}

.image-modal__img {
  max-width: 90%;
  max-height: 90%;
  object-fit: contain;
  border-radius: var(--border-radius-sm);
  transform: scale(0.9) translateY(20px);
  transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
  opacity: 0;
  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.8);
}

.image-modal.active .image-modal__img {
  transform: scale(1) translateY(0);
  opacity: 1;
}

.modal__close {
  position: absolute;
  top: 30px;
  right: 30px;
  color: white;
  font-size: 2.5rem;
  cursor: pointer;
  opacity: 0.7;
  transition: var(--transition-bounce);
  background: none;
  border: none;
  padding: var(--space-sm);
  z-index: 1002;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  backdrop-filter: blur(5px);
  background: rgba(255, 255, 255, 0.1);
}

.modal__close:hover {
  opacity: 1;
  transform: rotate(90deg) scale(1.1);
  background: rgba(255, 255, 255, 0.2);
}

/* 提示框样式 */
.toast-container {
  position: fixed;
  bottom: 30px;
  right: 30px;
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
  z-index: 1100;
  pointer-events: none;
}

.toast {
  padding: var(--space-md) var(--space-lg);
  border-radius: var(--border-radius);
  background: var(--glass-bg);
  backdrop-filter: blur(20px);
  color: var(--text-primary);
  box-shadow: var(--shadow-md), 0 0 20px rgba(var(--primary-color-rgb), 0.2);
  display: flex;
  align-items: center;
  gap: var(--space-md);
  transform: translateX(150%) translateY(0);
  transition: transform 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55), opacity 0.4s ease;
  border-left: 4px solid var(--primary-color);
  max-width: 350px;
  opacity: 0;
  pointer-events: auto;
  position: relative;
  overflow: hidden;
}

.toast::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background: linear-gradient(
    90deg,
    rgba(255,255,255,0.03) 0%,
    rgba(255,255,255,0.06) 50%,
    rgba(255,255,255,0.03) 100%
  );
  transform: translateX(-100%);
  animation: shimmer 2s infinite;
}

.toast.show {
  transform: translateX(0) translateY(0);
  opacity: 1;
}

.toast i {
  font-size: 1.3rem;
}

.toast--success {
  border-left-color: var(--success-color);
}

.toast--success i {
  color: var(--success-color);
}

.toast--error {
  border-left-color: var(--danger-color);
}

.toast--error i {
  color: var(--danger-color);
}

.toast--warning {
  border-left-color: var(--warning-color);
}

.toast--warning i {
  color: var(--warning-color);
}

.toast--info {
  border-left-color: var(--info-color);
}

.toast--info i {
  color: var(--info-color);
}
